<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.eurekaclinical</groupId>
	<artifactId>eurekaclinical-admin-webapp</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<dependencies>
		<dependency>
			<groupId>com.github.eirslett</groupId>
			<artifactId>frontend-maven-plugin</artifactId>
			<version>1.3</version>
			<type>maven-plugin</type>
		</dependency>
	</dependencies>
	<build>
		<finalName>eurekaclinical-admin-webapp</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<!-- plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
			</plugin-->
			<!-- Plugin to execute command "npm install" and "npm run build" inside 
				adminapp directory -->
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.0</version>
				<configuration>
					<workingDirectory>${project.basedir}/src/app</workingDirectory>
					<installDirectory>${project.basedir}/src/temp</installDirectory>
				</configuration>
				<executions>
					<!-- It will install nodejs and npm -->
					<execution>
						<id>install node and npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<configuration>
							<nodeVersion>v8.9.1</nodeVersion>
							<npmVersion>3.9.5</npmVersion>
						</configuration>
					</execution>

					<!-- It will execute command "npm install" inside "/adminapp" directory -->
					<execution>
						<id>npm install</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>install</arguments>
						</configuration>
					</execution>
					<!-- execute command "npm build" inside "/adminapp" directory to clean 
						and create "/dist" directory -->
					<!-- (add two minuses for prod and base-href) arguments>run build prod 
						base-href /eurekaclinical-admin-webapp/</arguments -->
					<execution>
						<id>npm build</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>run build</arguments>
						</configuration>
					</execution>
					<!-- create angular app.js consolidated, ordered, minified file from 
						.ts files -->
					<!-- execution> <id>gulp build</id> <goals> <goal>gulp</goal> </goals> 
						<configuration> <arguments>build-app-prod</arguments> </configuration> </execution -->
					<execution>
						<id>gulp webserver</id>
						<goals>
							<goal>gulp</goal>
						</goals>
						<configuration>
							<workingDirectory>${project.basedir}</workingDirectory>
							<arguments>webserver</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Plugin to copy the content of /dist/ directory to output directory -->
			<!-- plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-resources-plugin</artifactId> 
				<version>2.4.2</version> <executions> <execution> <id>default-copy-resources</id> 
				<phase>process-resources</phase> <goals> <goal>copy-resources</goal> </goals> 
				<configuration> <overwrite>true</overwrite> <outputDirectory>${project.build.directory}/${project.artifactId}/</outputDirectory> 
				<resources> <resource> <directory>${project.basedir}/src/main/adminapp/dist</directory> 
				</resource> </resources> </configuration> </execution> </executions> </plugin -->
		</plugins>
	</build>

</project>